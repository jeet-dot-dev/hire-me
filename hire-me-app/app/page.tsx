"use client";

import { useState } from "react";
import { useSession, signOut } from "next-auth/react";
import { useRouter } from "next/navigation";
import Image from "next/image";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import {
  Menu,
  X,
  Users,
  Target,
  Zap,
  Shield,
  Search,
  MessageSquare,
  FileText,
  CheckCircle,
  Star,
  ArrowRight,
  Briefcase,
  UserCheck,
  BarChart3,
  Brain,
  Eye,
  Github,
  Twitter,
  Linkedin,
  Mail,
} from "lucide-react";
import { motion, AnimatePresence } from "framer-motion";

type UserType = "candidate" | "recruiter";

const DevelopmentBanner = ({
  setIsVisible,
}: {
  setIsVisible: (visible: boolean) => void;
}) => {
  return (
    <motion.div
      className="fixed top-0 w-full bg-gradient-to-r from-green-900/90 to-emerald-900/90 backdrop-blur-md border-b border-green-500/30 px-4 py-4 z-[60] h-[72px]"
      initial={{ y: -100, opacity: 0 }}
      animate={{ y: 0, opacity: 1 }}
      exit={{ y: -100, opacity: 0 }}
      transition={{
        duration: 0.6,
        ease: "easeOut",
        type: "spring",
        stiffness: 120,
        damping: 25,
      }}
    >
      <div className="max-w-7xl mx-auto flex items-center justify-between">
        <div className="flex items-center gap-3">
          <Star className="w-5 h-5 text-yellow-400 animate-pulse" />
          <div className="text-white">
            <span className="font-semibold">Landing Page in Progress</span>
            <span className="ml-2 text-sm text-gray-200">
              🚀 This beautiful landing page was generated by AI and is
              currently under development. Stay tuned for more exciting features
              and improvements!
            </span>
          </div>
        </div>
        <button
          onClick={() => setIsVisible(false)}
          className="text-white hover:text-gray-300 transition-colors duration-200 p-1"
          aria-label="Close banner"
        >
          <X className="w-5 h-5" />
        </button>
      </div>
    </motion.div>
  );
};

const Navbar = ({ bannerVisible }: { bannerVisible: boolean }) => {
  const { status } = useSession();
  const router = useRouter();
  const [menuOpen, setMenuOpen] = useState(false);

  /** ────────── handlers ────────── */
  const handleSignIn = () => router.push("/auth/login");
  const handleSignUp = () => router.push("/auth/register");
  const handleLogout = () => signOut({ callbackUrl: "/" });

  const isAuthenticated = status === "authenticated";

  const scrollToSection = (sectionId: string) => {
    const element = document.getElementById(sectionId);
    if (element) {
      element.scrollIntoView({ behavior: "smooth" });
    }
  };

  return (
    <motion.nav
      className={`fixed w-full min-h-[80px] bg-black/90 backdrop-blur-md border-b border-gray-800 flex items-center justify-between px-6 z-50 ${
        bannerVisible ? "top-[72px]" : "top-0"
      }`}
      initial={{ y: -100, opacity: 0 }}
      animate={{ y: 0, opacity: 1 }}
      transition={{
        duration: 0.8,
        ease: "easeOut",
        type: "spring",
        stiffness: 100,
        damping: 20,
      }}
      style={{
        transition: "top 0.3s ease-in-out",
      }}
    >
      {/* Logo */}
      <div className="flex items-center">
        <Image src="/logo3.png" alt="Hire-me" width={150} height={20} />
      </div>

      {/* Center Navigation (Desktop) */}
      <div className="hidden md:flex items-center gap-6">
        <Button
          variant="ghost"
          className="text-white hover:bg-white hover:text-black rounded-full cursor-pointer text-[17px] transition-all duration-300"
          onClick={() => scrollToSection("home")}
        >
          Home
        </Button>
        <Button
          variant="ghost"
          className="text-white hover:bg-white hover:text-black rounded-full cursor-pointer text-[17px] transition-all duration-300"
          onClick={() => scrollToSection("features")}
        >
          Features
        </Button>
        <Button
          variant="ghost"
          className="text-white hover:bg-white hover:text-black rounded-full cursor-pointer text-[17px] transition-all duration-300"
          onClick={() => scrollToSection("pricing")}
        >
          Pricing
        </Button>
        <Button
          variant="ghost"
          className="text-white hover:bg-white hover:text-black rounded-full cursor-pointer text-[17px] transition-all duration-300"
          onClick={() => scrollToSection("how-it-works")}
        >
          How it works
        </Button>
      </div>

      {/* Auth Button */}
      <div className="hidden md:block">
        <Button
          className="rounded-full bg-white text-[17px] text-black cursor-pointer hover:bg-gray-200 transition-all duration-300"
          onClick={isAuthenticated ? handleLogout : handleSignIn}
        >
          {isAuthenticated ? "Logout" : "Login"}
        </Button>
      </div>

      {/* Mobile Menu Icon */}
      <div className="md:hidden pr-2">
        <button
          className="text-white flex items-center justify-center w-10 h-10 rounded-lg hover:bg-gray-800 transition-colors"
          onClick={() => setMenuOpen(!menuOpen)}
        >
          {menuOpen ? (
            <X size={24} strokeWidth={2} className="text-white" />
          ) : (
            <Menu size={24} strokeWidth={2} className="text-white" />
          )}
        </button>
      </div>

      {/* Slide-out Mobile Menu */}
      <div
        className={`fixed top-0 right-0 h-full w-2/3 bg-black shadow-lg transform transition-transform duration-300 ease-in-out z-50 ${
          menuOpen ? "translate-x-0" : "translate-x-full"
        }`}
      >
        <div className="flex justify-end p-4">
          <button
            className="text-white p-2 hover:bg-gray-800 rounded-lg transition-colors"
            onClick={() => setMenuOpen(false)}
          >
            <X size={24} strokeWidth={2} />
          </button>
        </div>

        <div className="flex flex-col items-start px-6 gap-6">
          <Button
            variant="ghost"
            className="text-white text-[17px] w-full justify-start hover:bg-gray-800 transition-all duration-300"
            onClick={() => {
              setMenuOpen(false);
              scrollToSection("home");
            }}
          >
            Home
          </Button>
          <Button
            variant="ghost"
            className="text-white text-[17px] w-full justify-start hover:bg-gray-800 transition-all duration-300"
            onClick={() => {
              setMenuOpen(false);
              scrollToSection("features");
            }}
          >
            Features
          </Button>
          <Button
            variant="ghost"
            className="text-white text-[17px] w-full justify-start hover:bg-gray-800 transition-all duration-300"
            onClick={() => {
              setMenuOpen(false);
              scrollToSection("pricing");
            }}
          >
            Pricing
          </Button>
          <Button
            variant="ghost"
            className="text-white text-[17px] w-full justify-start hover:bg-gray-800 transition-all duration-300"
            onClick={() => {
              setMenuOpen(false);
              scrollToSection("how-it-works");
            }}
          >
            How it works
          </Button>

          <div className="w-full space-y-3">
            <Button
              className="rounded-full bg-white text-[17px] text-black cursor-pointer hover:bg-gray-200 transition-all duration-300 w-full"
              onClick={isAuthenticated ? handleLogout : handleSignIn}
            >
              {isAuthenticated ? "Logout" : "Login"}
            </Button>
            {!isAuthenticated && (
              <Button
                variant="outline"
                className="rounded-full text-[17px] text-white border-white hover:bg-white hover:text-black transition-all duration-300 w-full"
                onClick={handleSignUp}
              >
                Sign Up
              </Button>
            )}
          </div>
        </div>
      </div>
    </motion.nav>
  );
};

const HeroSection = ({ bannerVisible }: { bannerVisible: boolean }) => {
  const { data: session, status } = useSession();
  const router = useRouter();

  const isAuthenticated = status === "authenticated";

  const handleDashboard = () => {
    if (isAuthenticated && session?.user?.role) {
      const userRole = session.user.role.toLowerCase();
      router.push(`/${userRole}/dashboard`);
    } else if (isAuthenticated) {
      // If authenticated but no role, redirect to a safe page
      router.push("/auth/login");
    } else {
      router.push("/auth/login");
    }
  };

  return (
    <section
      id="home"
      className={`relative min-h-screen bg-black flex items-center justify-center transition-all duration-300 ${
        bannerVisible ? "pt-[152px]" : "pt-20"
      }`}
    >
      <div className="relative z-10 text-center max-w-4xl mx-auto px-6">
        <motion.h1
          className="text-6xl md:text-8xl font-bold text-white mb-6"
          initial={{ opacity: 0, y: 50 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
        >
          Hire<span className="text-green-400">-Me</span>
        </motion.h1>

        <motion.p
          className="text-xl md:text-2xl text-gray-300 mb-8 max-w-2xl mx-auto"
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.2 }}
        >
          Connect talented candidates with top recruiters. AI-powered matching
          for the perfect hire.
        </motion.p>

        <motion.div
          className="flex flex-col sm:flex-row gap-4 justify-center items-center"
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.4 }}
        >
          <Button
            size="lg"
            className="bg-green-600 hover:bg-green-700 text-white px-8 py-4 text-lg rounded-full transition-all duration-300"
            onClick={handleDashboard}
          >
            {isAuthenticated ? "Go to Dashboard" : "Get Started"}
            <ArrowRight className="ml-2 w-5 h-5" />
          </Button>
          <Button
            variant="outline"
            size="lg"
            className="border-white text-black hover:bg-white hover:text-black px-8 py-4 text-lg rounded-full transition-all duration-300"
            onClick={() =>
              document
                .getElementById("features")
                ?.scrollIntoView({ behavior: "smooth" })
            }
          >
            Learn More
          </Button>
        </motion.div>
      </div>
    </section>
  );
};

const UserTypeToggle = ({
  userType,
  setUserType,
}: {
  userType: UserType;
  setUserType: (type: UserType) => void;
}) => {
  return (
    <div className="flex justify-center mb-12">
      <div className="bg-gray-900 p-1 rounded-full flex">
        <Button
          variant={userType === "candidate" ? "default" : "ghost"}
          className={`rounded-full px-8 py-2 transition-all duration-300 ${
            userType === "candidate"
              ? "bg-green-600 text-white hover:bg-green-700"
              : "text-gray-400 hover:text-white hover:bg-gray-800"
          }`}
          onClick={() => setUserType("candidate")}
        >
          <Users className="w-4 h-4 mr-2" />
          For Candidates
        </Button>
        <Button
          variant={userType === "recruiter" ? "default" : "ghost"}
          className={`rounded-full px-8 py-2 transition-all duration-300 ${
            userType === "recruiter"
              ? "bg-green-600 text-white hover:bg-green-700"
              : "text-gray-400 hover:text-white hover:bg-gray-800"
          }`}
          onClick={() => setUserType("recruiter")}
        >
          <Briefcase className="w-4 h-4 mr-2" />
          For Recruiters
        </Button>
      </div>
    </div>
  );
};

const FeaturesSection = () => {
  const [userType, setUserType] = useState<UserType>("candidate");

  const candidateFeatures = [
    {
      icon: <Search className="w-8 h-8 text-green-400" />,
      title: "Smart Job Matching",
      description:
        "AI-powered algorithm matches you with jobs that perfectly fit your skills and preferences.",
    },
    {
      icon: <FileText className="w-8 h-8 text-emerald-400" />,
      title: "Resume Builder",
      description:
        "Create professional resumes with our intelligent builder and templates.",
    },
    {
      icon: <MessageSquare className="w-8 h-8 text-teal-400" />,
      title: "Interview Prep",
      description:
        "Practice with AI-powered mock interviews and get personalized feedback.",
    },
    {
      icon: <Target className="w-8 h-8 text-lime-400" />,
      title: "Skill Assessment",
      description:
        "Showcase your abilities with our comprehensive skill testing platform.",
    },
    {
      icon: <BarChart3 className="w-8 h-8 text-green-500" />,
      title: "Career Analytics",
      description:
        "Track your application progress and get insights on improving your profile.",
    },
    {
      icon: <Shield className="w-8 h-8 text-emerald-500" />,
      title: "Privacy Control",
      description:
        "Complete control over who sees your profile and personal information.",
    },
  ];

  const recruiterFeatures = [
    {
      icon: <Brain className="w-8 h-8 text-green-400" />,
      title: "AI Candidate Screening",
      description:
        "Automatically screen and rank candidates based on job requirements.",
    },
    {
      icon: <Users className="w-8 h-8 text-emerald-400" />,
      title: "Talent Pool Management",
      description:
        "Build and manage your talent pipeline with advanced filtering options.",
    },
    {
      icon: <Eye className="w-8 h-8 text-teal-400" />,
      title: "Interview Scheduling",
      description:
        "Streamlined interview scheduling with calendar integration.",
    },
    {
      icon: <UserCheck className="w-8 h-8 text-lime-400" />,
      title: "Application Tracking",
      description:
        "Complete ATS system to manage your hiring process efficiently.",
    },
    {
      icon: <BarChart3 className="w-8 h-8 text-green-500" />,
      title: "Hiring Analytics",
      description: "Data-driven insights to improve your recruitment strategy.",
    },
    {
      icon: <Zap className="w-8 h-8 text-emerald-500" />,
      title: "Bulk Actions",
      description:
        "Efficiently manage multiple applications with bulk operations.",
    },
  ];

  const features =
    userType === "candidate" ? candidateFeatures : recruiterFeatures;

  return (
    <section id="features" className="bg-black py-20">
      <div className="max-w-7xl mx-auto px-6">
        <motion.div
          className="text-center mb-16"
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
        >
          <h2 className="text-4xl md:text-5xl font-bold text-white mb-4">
            Powerful Features
          </h2>
          <p className="text-xl text-gray-400 max-w-2xl mx-auto">
            Everything you need to{" "}
            {userType === "candidate"
              ? "find your dream job"
              : "hire the best talent"}
          </p>
        </motion.div>

        <UserTypeToggle userType={userType} setUserType={setUserType} />

        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {features.map((feature, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: index * 0.1 }}
              viewport={{ once: true }}
            >
              <Card className="bg-gray-900 border-gray-800 hover:border-gray-700 transition-all duration-300 h-full">
                <CardHeader>
                  <div className="mb-4">{feature.icon}</div>
                  <CardTitle className="text-white text-xl">
                    {feature.title}
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-gray-400">{feature.description}</p>
                </CardContent>
              </Card>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
};

const PricingSection = () => {
  const [userType, setUserType] = useState<UserType>("candidate");

  const candidatePlans = [
    {
      name: "Free",
      price: "$0",
      period: "/month",
      features: [
        "Basic job search",
        "Resume builder",
        "5 applications per month",
        "Basic profile",
        "Email support",
      ],
      popular: false,
    },
    {
      name: "Pro",
      price: "$19",
      period: "/month",
      features: [
        "Unlimited job applications",
        "AI-powered matching",
        "Advanced resume templates",
        "Interview preparation",
        "Priority support",
        "Skill assessments",
      ],
      popular: true,
    },
    {
      name: "Premium",
      price: "$39",
      period: "/month",
      features: [
        "Everything in Pro",
        "Personal career coach",
        "Salary negotiation tips",
        "LinkedIn optimization",
        "1-on-1 mock interviews",
        "Career analytics",
      ],
      popular: false,
    },
  ];

  const recruiterPlans = [
    {
      name: "Starter",
      price: "$99",
      period: "/month",
      features: [
        "Up to 5 job postings",
        "Basic candidate search",
        "Email support",
        "Basic ATS features",
        "10 candidate contacts/month",
      ],
      popular: false,
    },
    {
      name: "Professional",
      price: "$299",
      period: "/month",
      features: [
        "Unlimited job postings",
        "AI candidate screening",
        "Advanced search filters",
        "Interview scheduling",
        "Priority support",
        "Hiring analytics",
      ],
      popular: true,
    },
    {
      name: "Enterprise",
      price: "$799",
      period: "/month",
      features: [
        "Everything in Professional",
        "Custom integrations",
        "Dedicated account manager",
        "Advanced analytics",
        "Bulk operations",
        "White-label options",
      ],
      popular: false,
    },
  ];

  const plans = userType === "candidate" ? candidatePlans : recruiterPlans;

  return (
    <section id="pricing" className="bg-black py-20">
      <div className="max-w-7xl mx-auto px-6">
        <motion.div
          className="text-center mb-16"
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
        >
          <h2 className="text-4xl md:text-5xl font-bold text-white mb-4">
            Simple Pricing
          </h2>
          <p className="text-xl text-gray-400 max-w-2xl mx-auto">
            Choose the perfect plan for your{" "}
            {userType === "candidate" ? "career journey" : "hiring needs"}
          </p>
        </motion.div>

        <UserTypeToggle userType={userType} setUserType={setUserType} />

        <div className="grid md:grid-cols-3 gap-8">
          {plans.map((plan, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: index * 0.1 }}
              viewport={{ once: true }}
            >
              <Card
                className={`relative h-full transition-all duration-300 ${
                  plan.popular
                    ? "bg-gradient-to-b from-green-900 to-gray-900 border-green-500 hover:border-green-400"
                    : "bg-gray-900 border-gray-800 hover:border-gray-700"
                }`}
              >
                {plan.popular && (
                  <Badge className="absolute -top-3 left-1/2 transform -translate-x-1/2 bg-green-600 text-white">
                    Most Popular
                  </Badge>
                )}
                <CardHeader className="text-center">
                  <CardTitle className="text-white text-2xl mb-2">
                    {plan.name}
                  </CardTitle>
                  <div className="mb-4">
                    <span className="text-4xl font-bold text-white">
                      {plan.price}
                    </span>
                    <span className="text-gray-400">{plan.period}</span>
                  </div>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-3 mb-8">
                    {plan.features.map((feature, featureIndex) => (
                      <li key={featureIndex} className="flex items-start">
                        <CheckCircle className="w-5 h-5 text-green-400 mr-2 mt-0.5 flex-shrink-0" />
                        <span className="text-gray-300">{feature}</span>
                      </li>
                    ))}
                  </ul>
                  <Button
                    className={`w-full transition-all duration-300 ${
                      plan.popular
                        ? "bg-green-600 hover:bg-green-700"
                        : "bg-gray-800 hover:bg-gray-700"
                    } text-white`}
                  >
                    Get Started
                  </Button>
                </CardContent>
              </Card>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
};

const HowItWorksSection = () => {
  const [userType, setUserType] = useState<UserType>("candidate");

  const candidateSteps = [
    {
      step: "1",
      title: "Create Your Profile",
      description:
        "Sign up and build your professional profile with our smart resume builder.",
    },
    {
      step: "2",
      title: "Get Matched",
      description:
        "Our AI algorithm finds and suggests jobs that perfectly match your skills and preferences.",
    },
    {
      step: "3",
      title: "Apply & Interview",
      description:
        "Apply to jobs with one click and prepare for interviews with our AI coaching.",
    },
    {
      step: "4",
      title: "Get Hired",
      description: "Land your dream job and start your new career journey.",
    },
  ];

  const recruiterSteps = [
    {
      step: "1",
      title: "Post Your Job",
      description:
        "Create detailed job postings with our intuitive job posting wizard.",
    },
    {
      step: "2",
      title: "AI Screening",
      description:
        "Our AI automatically screens and ranks candidates based on your requirements.",
    },
    {
      step: "3",
      title: "Review & Interview",
      description:
        "Review top candidates and schedule interviews with our integrated calendar.",
    },
    {
      step: "4",
      title: "Make Your Hire",
      description:
        "Select the best candidate and streamline your onboarding process.",
    },
  ];

  const steps = userType === "candidate" ? candidateSteps : recruiterSteps;

  return (
    <section id="how-it-works" className="bg-black py-20">
      <div className="max-w-7xl mx-auto px-6">
        <motion.div
          className="text-center mb-16"
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
        >
          <h2 className="text-4xl md:text-5xl font-bold text-white mb-4">
            How It Works
          </h2>
          <p className="text-xl text-gray-400 max-w-2xl mx-auto">
            Simple steps to{" "}
            {userType === "candidate"
              ? "find your next opportunity"
              : "find the perfect candidate"}
          </p>
        </motion.div>

        <UserTypeToggle userType={userType} setUserType={setUserType} />

        <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
          {steps.map((step, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: index * 0.1 }}
              viewport={{ once: true }}
              className="text-center"
            >
              <div className="w-16 h-16 bg-green-600 rounded-full flex items-center justify-center text-white text-2xl font-bold mx-auto mb-4 transition-all duration-300 hover:bg-green-700">
                {step.step}
              </div>
              <h3 className="text-xl font-semibold text-white mb-3">
                {step.title}
              </h3>
              <p className="text-gray-400">{step.description}</p>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
};

const Footer = () => {
  return (
    <footer className="bg-black border-t border-gray-800 py-12">
      <div className="max-w-7xl mx-auto px-6">
        <div className="grid md:grid-cols-4 gap-8 mb-8">
          <div>
            <Image
              src="/logo3.png"
              alt="Hire-me"
              width={150}
              height={20}
              className="mb-4"
            />
            <p className="text-gray-400 text-sm">
              Connecting talent with opportunity through AI-powered matching.
            </p>
          </div>

          <div>
            <h4 className="text-white font-semibold mb-4">For Candidates</h4>
            <ul className="space-y-2 text-gray-400 text-sm">
              <li>
                <a href="#" className="hover:text-white transition">
                  Job Search
                </a>
              </li>
              <li>
                <a href="#" className="hover:text-white transition">
                  Resume Builder
                </a>
              </li>
              <li>
                <a href="#" className="hover:text-white transition">
                  Interview Prep
                </a>
              </li>
              <li>
                <a href="#" className="hover:text-white transition">
                  Career Tips
                </a>
              </li>
            </ul>
          </div>

          <div>
            <h4 className="text-white font-semibold mb-4">For Recruiters</h4>
            <ul className="space-y-2 text-gray-400 text-sm">
              <li>
                <a href="#" className="hover:text-white transition">
                  Post Jobs
                </a>
              </li>
              <li>
                <a href="#" className="hover:text-white transition">
                  Find Talent
                </a>
              </li>
              <li>
                <a href="#" className="hover:text-white transition">
                  ATS System
                </a>
              </li>
              <li>
                <a href="#" className="hover:text-white transition">
                  Analytics
                </a>
              </li>
            </ul>
          </div>

          <div>
            <h4 className="text-white font-semibold mb-4">Connect</h4>
            <div className="flex space-x-4">
              <a href="#" className="text-gray-400 hover:text-white transition">
                <Twitter className="w-5 h-5" />
              </a>
              <a href="#" className="text-gray-400 hover:text-white transition">
                <Linkedin className="w-5 h-5" />
              </a>
              <a href="#" className="text-gray-400 hover:text-white transition">
                <Github className="w-5 h-5" />
              </a>
              <a href="#" className="text-gray-400 hover:text-white transition">
                <Mail className="w-5 h-5" />
              </a>
            </div>
          </div>
        </div>

        <div className="border-t border-gray-800 pt-8 text-center">
          <p className="text-gray-400 text-sm">
            © 2025 Hire-Me. All rights reserved. Built with ❤️ and AI.
          </p>
        </div>
      </div>
    </footer>
  );
};

export default function Home() {
  const [bannerVisible, setBannerVisible] = useState(true);

  return (
    <div className="min-h-screen bg-black">
      <AnimatePresence>
        {bannerVisible && (
          <DevelopmentBanner
            setIsVisible={setBannerVisible}
          />
        )}
      </AnimatePresence>
      <Navbar bannerVisible={bannerVisible} />
      <HeroSection bannerVisible={bannerVisible} />
      <FeaturesSection />
      <PricingSection />
      <HowItWorksSection />
      <Footer />
    </div>
  );
}
